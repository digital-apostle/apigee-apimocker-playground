<?xml version="1.0" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>apigee</groupId>
    <artifactId>parent-pom</artifactId>
    <packaging>pom</packaging>

    <properties>
        <!-- <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <org.slf4j.simpleLogger.defaultLogLevel>info</org.slf4j.simpleLogger.defaultLogLevel> -->
        <project.root.dir>${basedir}</project.root.dir>
        <target.root.dir>${basedir}/target</target.root.dir>
        <!-- <apigee.hosturl>https://api.enterprise.apigee.com</apigee.hosturl>
        <apigee.apiversion>v1</apigee.apiversion>
        <apigee.options>update</apigee.options> -->
    </properties>


    <version>1.0</version>
    <pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <name>Maven Plugin Repository</name>
            <url>http://repo1.maven.org/maven2</url>
            <layout>default</layout>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <updatePolicy>never</updatePolicy>
            </releases>
        </pluginRepository>
    </pluginRepositories>
    <!-- Since Maven 3.0.3, for two plugins bound to the same phase, the order 
         of execution is the same as the order in which you define them. -->
    <build>
        <extensions>
            <extension>
                <groupId>com.github.shyiko.servers-maven-extension</groupId>
                <artifactId>servers-maven-extension</artifactId>
                <version>1.3.0</version>
            </extension>
        </extensions>

   <plugins>


                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.3.2</version>
                        <executions>
                            <execution>
                                <id>exec-npm-install-for-node-resources</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>npm</executable>
                                    <workingDirectory>${project.root.dir}/apiproxy/resources/node</workingDirectory>
                                    <commandlineArgs>
                                        install
                                    </commandlineArgs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.cj.jshintmojo</groupId>
                        <artifactId>jshint-maven-plugin</artifactId>
                        <version>1.6.0</version>
                        <executions>
                            <execution>
                                <id>validate-proxy-sources</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>lint</goal>
                                </goals>
                                <configuration>
                                    <directories>
                                        <directory>apiproxy/resources/node</directory>
                                    </directories>
                                    <excludes>
                                        <exclude>apiproxy/resources/node/node_modules</exclude>
                                    </excludes>
                                    <reporter>jslint</reporter>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.6</version>
                        <executions>
                            <execution>
                                <id>copy-proxy-resources</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <overwrite>true</overwrite>
                                    <outputDirectory>${target.root.dir}</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.root.dir}</directory>
                                            <filtering>true</filtering>
                                            <includes>
                                                <include>apiproxy/**</include>
                                            </includes>
                                            <excludes>
                                                <exclude>apiproxy/**/node_modules/**</exclude>
                                            </excludes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>zip-node-modules</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <descriptor>${project.root.dir}/apiproxy/resources/node/node_modules/zip.xml</descriptor>
                                    <finalName>node_modules</finalName>
                                    <outputDirectory>${target.root.dir}/apiproxy/resources/node</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>





     
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <execution>
                        <id>copy-resources-step</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <overwrite>true</overwrite>
                            <outputDirectory>${basedir}/target/apiproxy</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>apiproxy</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.apigee.build-tools.enterprise4g</groupId>
                <artifactId>apigee-edge-maven-plugin</artifactId>
                <version>1.1.7</version>
                <executions>
                    <execution>
                        <id>configure-bundle-step</id>
                        <phase>package</phase>
                        <goals>
                            <goal>configure</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>deploy-bundle</id>
                        <phase>install</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.apigee.edge.config</groupId>
                <artifactId>apigee-config-maven-plugin</artifactId>
                <version>1.3.2</version>
                <executions>
                    <execution>
                        <id>create-config-cache</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>caches</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>create-config-targetserver</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>targetservers</goal>
                        </goals>
                    </execution>

                    <!-- Added kvms goal-->

                    <execution>
                        <id>create-config-kvms</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>kvms</goal>
                        </goals>
                    </execution>


                    <execution>
                        <id>create-config-resourcefiles</id>
                        <phase>install</phase>
                        <goals>
                            <goal>resourcefiles</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>create-config-apiproduct</id>
                        <phase>install</phase>
                        <goals>
                            <goal>apiproducts</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>create-config-developer</id>
                        <phase>install</phase>
                        <goals>
                            <goal>developers</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>create-config-app</id>
                        <phase>install</phase>
                        <goals>
                            <goal>apps</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>create-config-reports</id>
                        <phase>install</phase>
                        <goals>
                            <goal>reports</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
    <profiles>
        <profile>
            <id>test</id>
            <properties>
                <apigee.profile>test</apigee.profile>
                <apigee.hosturl>https://api.enterprise.apigee.com</apigee.hosturl>
                <apigee.apiversion>v1</apigee.apiversion>
                <apigee.org>darrenkabengele-eval</apigee.org>
                <apigee.env>test</apigee.env>
                <apigee.username>${username}</apigee.username>
                <apigee.password>${password}</apigee.password>
                <!-- <apigee.username>${settings.servers.apigee-edge.username}</apigee.username>
                <apigee.password>${settings.servers.apigee-edge.password}</apigee.password> -->
                <apigee.authtype>basic</apigee.authtype>                <!-- optional: oauth|basic(default) -->
                <apigee.tokenurl>https://login.apigee.com/oauth/token</apigee.tokenurl>                <!-- optional: oauth -->
                <apigee.mfatoken>${mfatoken}</apigee.mfatoken>                <!-- optional: mfa -->
                <apigee.clientid>${clientId}</apigee.clientid>                <!-- optional: Oauth Client Id - Default is edgecli-->
                <apigee.clientsecret>${clientSecret}</apigee.clientsecret>                <!-- optional: Oauth Client Secret Default is edgeclisecret-->
                <apigee.bearer>${bearer}</apigee.bearer>                <!-- optional: Bearer token override -->
                <apigee.refresh>${refresh}</apigee.refresh>                <!-- optional: Refresh token override -->
            </properties>
        </profile>

    </profiles>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>







